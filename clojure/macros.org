** =#=
The =#= in the let is used to generate a unique
name for the local binding.

The passed in code may have something in it
named temp. This would be a problem, of
course.

Anything with a =#= in it will get a unique
value appended to it. This will make the name
unique and avoid any naming collisions.

** =~=
The tilde ~ says to replace the code in the
macro with the code passed in as a parameter. 

This now makes use of the passed in
parameters. temp is a value but the other
parameters are chunks of code to execute.  

Remember, a macro is kind of like a code
template that has some pieces that will stay
the same and some that will be replaced. The
tilde is how I replace those parts of the
code.

The output now selects one of the printlns to
execute instead of all three. 

** =macroexpand-1=

There is a function that will show you how
your macro will be expanded called
macroexpand-1. This is very helpful while
debugging your macros.

Here I am using it to see how the call to my
macro would be expanded with the four
parameters. I am printing the output of the
function call.

The screenshot has the output.