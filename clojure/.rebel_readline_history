1618989914330:(repeat 5 "x")
1618989923448:(repeat 5 9)
1618991182138:(repeat 5 \\x)
1618991191570:(apply str (repeat 5 \\x))
1618991212665:(apply str (repeat 5 "x"))
1618995582651:{\\a \\A \\b \\B \\c \\C \\d \\D \\e \\E \\f \\F \\o \\0 \\s \\5}
1618995607693:(let [hex-digits {\\a \\A \\b \\B \\c \\C \\d \\D \\e \\E \\f \\F \\o \\0 \\s \\5}] (hex-digits \\a))
1618995853713:(apply str "0x" '("a" "b"))
1618995860544:(apply str "_" "0x" '("a" "b"))
1618999501866:(reverse "shane")
1618999509475:(str (reverse "shane"))
1618999514514:(apply str (reverse "shane"))
1618999516898:(map str (reverse "shane"))
1618999518258:(apply str (reverse "shane"))
1618999662346:(loop [nums '(1 2 3)])
1618999667993:(loop [nums '(1 2 3)] (println nums))
1618999676033:(loop [nums '(1 2 3) base 1] (println nums))
1618999686097:(loop [nums '(1 2 3) base 1] (println nums base))
1619004226849:(some (fn [e] (if (>= 5))) '(1 5 9))
1619004357234:(some (fn [e] (if (e >= 5))) '(1 5 9))
1619004374625:(some (fn [e] (if (>= 5 e))) '(1 5 9))
1619004384024:(some (fn [e] (if (>= e 5))) '(1 5 9))
1619010491957:(def a-thread (new Thread (fn [] (println "In a thread"))))
1619010516596:(println "In a thread")
1619010518365:(def a-thread (new Thread (fn [] (println "In a thread"))))
1619010528132:(a-thread)
1619010550731:(.start a-thread)
1619010564379:(. a-thread start)
1619010570211:(.start a-thread)
1619010574067:(def a-thread (new Thread (fn [] (println "In a thread"))))
1619010579347:(. a-thread start)
