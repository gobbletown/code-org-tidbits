#+BEGIN_SRC haskell -n :esph nvc ghcih -norc :async :results none
  data Name = Name String
  
  -- this is the only way to create a Name
  nameFromString :: String -> Maybe Name
  nameFromString s | 10 < length s = Nothing
                   | otherwise     = Just (Name s)
  
  -- this is the only way to access the contents of a Name
  stringFromName :: Name -> String
  stringFromName (Name s) = s
  
  ---
  -- print $ stringFromName $ nameFromString "hi"
  stringFromName $ nameFromString "hi"
#+END_SRC

#+RESULTS:
#+begin_src haskell

<interactive>:3:26: error:
    • Couldn't match expected type ‘Name’ with actual type ‘Maybe Name’
    • In the second argument of ‘($)’, namely ‘nameFromString "hi"’
      In the second argument of ‘($)’, namely
        ‘stringFromName $ nameFromString "hi"’
      In the expression: print $ stringFromName $ nameFromString "hi"
#+end_src
