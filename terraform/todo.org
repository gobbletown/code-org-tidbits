* TODO Follow this guide. It's awesome
https://circleci.com/blog/deploy-a-clojure-web-application-to-aws-using-terraform/

* TODO Upgrade to terraform 0.15

* TODO Make another filter-cmd for instance type, security group, etc.
#+BEGIN_SRC sh -n :sps bash :async :results none
  sp +/"instance_type = \"t2.micro\"" "$MYGIT/alexsedova/terraform-aws-docker/app-instances.tf"
#+END_SRC

* Review AWS tutorial
https://github.com/azerothcore/wiki/blob/master/docs/aws-tutorial.md

* TODO Buttonize emacs
    sp +/"ami           = \"ami-26c43149\"" "$MYGIT/alexsedova/terraform-aws-docker/app-instances.tf"

    The "ami-[0-9a-z]+" string should be
    buttonized to search for the AMI.

    https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/finding-an-ami.html#finding-an-ami-console

    le tf | xargs cat1 | scrape "\bami-[a-z0-9]+\b"
    aws ec2 describe-images --image-ids ami-0ff8a91507f77f867

    https://grep.app/search?q=aws%20ec2%20describe-images%20--image-ids

    This is correct, I think.
    https://github.com/azerothcore/wiki/blob/master/docs/aws-tutorial.md

* TODO Create a recipe for this that I can follow the steps again and again
https://londonappdeveloper.thinkific.com/courses/devops-deployment-automation-terraform-aws-docker

* commands
#+BEGIN_SRC sh -n :sps bash :async :results none
  cd "$(gc https://github.com/npalm/terraform-aws-gitlab-runner)")
  # initialize to get all the resources I need
  terraform init

  # look at the graph
  terraform graph
#+END_SRC

#+BEGIN_SRC bash -n :i bash :async :results verbatim code
  terraform graph
#+END_SRC

*** TODO Add this to =cr=
#+BEGIN_SRC bash -n :i bash :async :results verbatim code
  terraform graph | dot -Tpng > graph.png
#+END_SRC