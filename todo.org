* Copy this across before continuing. It uses =hc=.
$SCRIPTS/aws

* automate aws
** TODO enable iam billing
I don't know how to do this with the CLI yet.

#+BEGIN_SRC sh -n :sps bash :async :results none
  egr aws cli enable iam billing
#+END_SRC

https://console.aws.amazon.com/billing/home?#/account

** TODO Make some aws tablists
#+BEGIN_SRC bash -n :i bash :async :results verbatim code
  aws iam list-users
#+END_SRC

#+RESULTS:
#+begin_src bash
{
    "Users": []
}
#+end_src

#+BEGIN_SRC bash -n :i bash :async :results verbatim code
  aws iam create-user --user-name Shane
#+END_SRC

* copy password
$NOTES/personal/passwords/google-gmail-aws2021.txt

* TODO Make a list of pages I have automated the CLI for
** Create admin user, admin group and admin policy
https://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started_create-admin-group.html

* Install
https://github.com/aome510/hackernews-TUI
** lmgrep
https://github.com/dainiusjocas/lucene-grep

#+BEGIN_SRC bash -n :i bash :async :results verbatim code
  echo "Lucene is awesome" | docker run --entrypoint "" --rm --name dainiusjocas-lucene-grep-e9cfdfb9-1-0-11f9f2c4-19dc-4a94-a13b-9bc3319e32ce -v /home/shane/source/git:/media/mygit -i dainiusjocas-lucene-grep-e9cfdfb9:1.0 ./lmgrep "Lucene"
#+END_SRC

#+RESULTS:
#+begin_src bash
[0;35m*STDIN*[0m:[0;32m1[0m:[1;31mLucene[0m is awesome
#+end_src

*** Read this
https://www.jocas.lt/blog/post/intro-to-lucene-grep/

* TODO Make some kind of fuzzyfinder for API endpoints
** Fuzzy select the name of an API
** Fuzzy select from the endpoints

* Get this
https://youtu.be/oZCPnnDlBvI?t=1152

* TODO Find a universal API fuzzy finder and explorer

* Find a way to fuzzy search the AWS API

* List all API endpoints
[[egr:aws api list all endpoints]]
[[egr:github api list all endpoints]]
[[egr:gitlab api list all endpoints]]
[[egr:terraform api list all endpoints]]
[[egr:docker api list all endpoints]]

** Fuzzy search endpoits
I need custom fuzzy finders.
I've been working on that in emacs, which is good.

* TODO Automate the aws cli a bit more
- filter-cmd-buttonize
- =aws-instances=

* Set up tools
** Set up =aws-shell=
https://aws.amazon.com/blogs/developer/super-charge-your-aws-command-line-experience-with-aws-shell/

** Set up =saws=
#+BEGIN_SRC sh -n :sps bash :async :results none
  x -sh saws -z "saws>" -s "aws " -i
#+END_SRC

** =aws-fuzzy-finder=
https://github.com/pmazurek/aws-fuzzy-finder

#+BEGIN_SRC sh -n :sps bash :async :results none
  py -36 i aws-fuzzy-finder
#+END_SRC

This is just for finding instances and sshing into them.

But it would be more useful to automate/extend emacs' =aws-instances=.

#+BEGIN_SRC sh -n :sps bash :async :results none
  mkw aws-fuzzy
#+END_SRC

* copy across
e:$SCRIPTS/docker-get-build-cmd

* docker wrapper for lmgrep
$SCRIPTS/lmgrep

* TODO Set up aws user account
https://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started_create-admin-group.html

#+BEGIN_SRC bash -n :i bash :async :results verbatim code
  oci aws iam create-user --user-name Administrator
  # Enable console login
  oci aws iam create-login-profile --user-name Administrator --password "$(pwgen 30 1 >> $NOTES/personal/passwords/aws-administrator.txt)"
  # Enable programmatic access
  oci aws iam create-access-key --user-name Administrator >> $NOTES/personal/passwords/aws-administrator-programmatic.json
#+END_SRC

#+BEGIN_SRC bash -n :i bash :async :results verbatim code
  oci aws iam create-user --user-name Administrator
#+END_SRC

#+RESULTS:
#+begin_src bash
{
    "User": {
        "Path": "/",
        "UserName": "Administrator",
        "UserId": "AIDAR55HCH7KNSLMHLBLO",
        "Arn": "arn:aws:iam::132957487060:user/Administrator",
        "CreateDate": "2021-04-26T00:07:09Z"
    }
}
#+end_src

# fuzzify
# aws iam list-policies

#+BEGIN_SRC text -n :async :results verbatim code
  AdministratorAccess
#+END_SRC